@page
@using Microsoft.AspNetCore.Mvc.Localization
@model ProfileModel
@{
	Layout = "~/Pages/Shared/_Layout.cshtml";
	var user = Model.CurrentUser;
	var telegramUser = Model.TelegramUser;
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IViewLocalizer Loc

<style>
	/* Дополнительные стили для страницы профиля */
	.tg-profile-item {
		display: flex;
		justify-content: space-between;
		padding: 12px 16px;
		border-bottom: 1px solid var(--tg-border-color);
	}

		.tg-profile-item:last-child {
			border-bottom: none;
		}

	.tg-profile-label {
		color: var(--tg-hint-color);
		font-size: 14px;
	}

	.tg-profile-value {
		font-size: 14px;
		font-weight: 500;
	}

	.tg-telegram-widget {
		margin: 16px 0;
		text-align: center;
	}
</style>

<script>
	function confirmDelete() {
		return confirm("Вы действительно хотите удалить аккаунт?");
	}

	function goToUser(userId, chatId) {
		window.location.href = '/TelegramUserProfile?userId=' + userId +'&chatId='+ chatId;
	}
</script>

<div class="tg-container">
	<div class="tg-header">
		<h1>@Loc["Welcome"] @user.UserName!</h1>
		<p>@Loc["Your_Profile"]</p>
	</div>

	<div class="tg-card">
		<div class="tg-profile-item">
			<span class="tg-profile-label">@Loc["Username"]</span>
			<span class="tg-profile-value">@user.UserName</span>
		</div>
		<div class="tg-profile-item">
			<span class="tg-profile-label">@Loc["Email"]</span>
			<span class="tg-profile-value">@user.Email</span>
		</div>
		<div class="tg-profile-item">
			<span class="tg-profile-label">@Loc["Roles"]</span>
			<span class="tg-profile-value">@string.Join(", ", user.Roles.FirstOrDefault())</span>
		</div>
	</div>

	@if (User.Identity.IsAuthenticated)
	{
		@if (telegramUser.UserId != 0)
		{
			<div class="tg-card clickable-section" onclick="goToUser(@telegramUser.UserId, null)">
				<h3 class="tg-card-title">Telegram Профиль</h3>
				<div class="tg-profile-item">
					<span class="tg-profile-label">Telegram Id:</span>
					<span class="tg-profile-value">@telegramUser.UserId</span>
				</div>
				<div class="tg-profile-item">
					<span class="tg-profile-label">Имя:</span>
					<span class="tg-profile-value">@telegramUser.Name</span>
				</div>
				<div class="tg-profile-item">
					<span class="tg-profile-label">Дата привязки:</span>
					<span class="tg-profile-value">@telegramUser.CreateDate.ToString("yyyy-MM-dd HH:mm")</span>
				</div>
			</div>
		}
		else
		{
			<div class="tg-telegram-widget">
				<script async
						src="https://telegram.org/js/telegram-widget.js?22"
						data-telegram-login="YN_AntispamBot"
						data-size="large"
						data-auth-url="/Account/TelegramEntry"
						data-request-access="write">
				</script>
			</div>
		}

		<!-- Секция настроек аккаунта -->
		<div class="tg-card">
			<h3 class="tg-card-title">Настройки профиля</h3>
			<div class="tg-button-grid">
				<a href="/Account/Auth/ManageExternalLogins" class="tg-button tg-button-success">
					Аккаунты
				</a>
			</div>
		</div>

		<!-- Секция административных действий -->
		<div policy="Admin" class="tg-card">
			<h3 class="tg-card-title">Настройки сайта</h3>
			<div class="tg-button-grid">
				<a href="/Admin/AllUsers" class="tg-button tg-button-primary">
					Пользователи сайта
				</a>
				<a href="/Admin/Analytics" class="tg-button tg-button-primary">
					@Loc["Site_Statistics"]
				</a>
			</div>
		</div>

		<div policy="Tutor" class="tg-card">
			<h3 class="tg-card-title">Настройки бота</h3>
			<div class="tg-button-grid">
				<a policy="Admin" href="/Admin/TelegramUsers" class="tg-button tg-button-link">
					@Loc["TgUsers"]
				</a>
				<a href="/Admin/AllChats" class="tg-button tg-button-link">
					Чаты бота
				</a>
			</div>
		</div>

		<!-- Опасные действия -->
		<div class="tg-card">
			<div class="tg-button-grid">
				<button onclick="location.href='@Url.Page("/Account/Logout")'"
						class="tg-button tg-button-danger">
					@Loc["Log_Out"]
				</button>
				<button onclick="if (confirmDelete()) { location.href='@Url.Page("/User/Delete")'; }"
						class="tg-button tg-button-danger">
					Удалить аккаунт
				</button>
			</div>
		</div>
	}
</div>