@page
@model TelegramAntispamBot.Pages.Admin.TelegramUsersModel
@{
}

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Loc

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>---</title>
    <style>
        /* Общие стили */
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            color: #212529;
        }

        h1 {
            text-align: center;
            margin: 20px 0;
            font-size: 2rem;
            color: #343a40;
        }

        /* Таблица */
        .table-container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow-x: auto; /* Для горизонтальной прокрутки на маленьких экранах */
        }

        table {
            width: 100%;
            border-collapse: collapse;
            font-size: 1rem;
        }

        table, th, td {
            border: 1px solid #dee2e6;
        }

        th, td {
            padding: 15px;
            text-align: left;
        }

        th {
            background-color: #007bff;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        tr:nth-child(odd) {
            background-color: #f8f9fa;
        }

        tr:hover {
            background-color: #e9ecef;
            cursor: pointer;
        }

        td {
            word-wrap: break-word; /* Перенос слов */
        }

        /* Кнопки */
        .button-container {
            text-align: center;
            margin: 20px 0;
        }

            .button-container button {
                margin: 5px;
                padding: 10px 20px;
                font-size: 1rem;
                color: white;
                background-color: #28a745;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s;
            }

                .button-container button:hover {
                    background-color: #218838;
                }

        table td:nth-child(4) {
            word-break: break-all;
        }

        .message-container {
            display: none; /* Скрываем контейнер по умолчанию */
            gap: 10px;
            margin-top: 10px;
            align-items: center;
        }

        .message-input {
            flex: 1;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            min-width: 200px;
        }

        .send-btn {
            padding: 8px 15px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .send-btn:hover {
                background-color: #218838;
            }

        .toggle-btn {
            padding: 6px 12px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .toggle-btn:hover {
                background-color: #0056b3;
            }

    </style>
    <script>
        async function toggleSendLinks(userId, checkbox) {
            const sendLinks = checkbox.checked;

            const response = await fetch(`TelegramUsers?handler=SetRightLiks&userId=${userId}&sendLinks=${sendLinks}`, {
                method: 'GET',
                headers: { 'Content-Type': 'application/json' },
            });

            if (!response.ok) {
                alert('Ошибка выполнения toggleSendLinks');
                checkbox.checked = !sendLinks;
            }
        }

         function toggleMessageInput(userId) {
                const container = document.getElementById(`message-container-${userId}`);
                container.style.display = container.style.display === 'flex' ? 'none' : 'flex';
            }

        async function sendMessage(userId) {
            const input = document.getElementById(`message-input-${userId}`);
            const message = input.value.trim();
               
            if (!message) {
                alert('@Loc["EnterMessage"]');
                return;
            }

            try {
                const response = await fetch(`TelegramUsers?handler=SendMessage&userId=${userId}&message=${message}`, {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' },
                });

            } catch (error) {
                console.error('Error:', error);
                alert('@Loc["SendError"]');
            }
        }
    </script>
</head>
<body>
    <h1>@Loc["PageName"]</h1>
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>@Loc["UserId"]</th>
                    <th>@Loc["Name"]</th>
                    <th>@Loc["CreateDate"]</th>
                    <th>@Loc["SendLinks"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.TelegramUsers)
                {
                    <tr>
                        <td>@user.UserId</td>
                        <td>@user.Name</td>
                        <td>@user.CreateDate</td>
                        <td>
                            <input type="checkbox" @(user.Permissions.SendLinks ? "checked" : "")
                                   onchange="toggleSendLinks(@user.UserId, this)">
                        </td>
                        <td>
                            <button class="toggle-btn" onclick="toggleMessageInput(@user.UserId)">
                               Написать сообщение
                            </button>
                            <div id="message-container-@user.UserId" class="message-container">
                                <textarea class="message-input"
                                          id="message-input-@user.UserId"
                                          rows="2"></textarea>
                                <button class="send-btn" onclick="sendMessage(@user.UserId)">
                                    Отправить
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>