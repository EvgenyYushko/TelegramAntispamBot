@page
@model TelegramAntispamBot.Pages.Admin.TelegramUsersModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analytics for Admin</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            color: #212529;
        }

        h1 {
            text-align: center;
            margin: 20px 0;
            font-size: 2rem;
            color: #343a40;
        }

        .table-container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            font-size: 1rem;
        }

        table, th, td {
            border: 1px solid #dee2e6;
        }

        th, td {
            padding: 15px;
            text-align: left;
        }

        th {
            background-color: #007bff;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        tr:nth-child(odd) {
            background-color: #f8f9fa;
        }

        tr:hover {
            background-color: #e9ecef;
            cursor: pointer;
        }

        td {
            word-wrap: break-word;
        }
    </style>
</head>
<body>
<h1>Test</h1>
<div class="table-container">
    <table>
        <thead>
        <tr>
            <th>UserId</th>
            <th>Name</th>
            <th>CreateDate</th>
            <th>SendLinks</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.TelegramUsers)
        {
            <tr>
                <td>@user.UserId</td>
                <td>@user.Name</td>
                <td>@user.CreateDate</td>
                <td>
                    <input type="checkbox" @(user.Permissions.SendLinks ? "checked" : "")
                           onchange="toggleSendLinks(@user.UserId, this)">
                </td>
            </tr>}
        </tbody>
    </table>
</div>
</body>
</html>
<script>
    async function toggleSendLinks(userId, checkbox) {
        const sendLinks = checkbox.checked;

        const response = await fetch(`TelegramUsers?handler=SetRightLiks&userId=${userId}&sendLinks=${sendLinks}`, {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' },
        });

        if (!response.ok) {
            alert('Ошибка при обновлении данных');
            checkbox.checked = !sendLinks;
        }
    }
</script>