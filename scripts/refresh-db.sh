#!/bin/bash

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_FILE="backup.dump"
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ CI/CD, –Ω–µ —Ö–∞—Ä–¥–∫–æ–¥–∏—Ç–µ –∏—Ö
# RENDER_API_KEY="rnd_sZLs5c8GIjjEmSc7EwblTKTvoTLZ"
# RENDER_SERVICE_ID="dpg-cu365mt2ng1s73c6t8b0-a"

# –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–π –ë–î
RAW_JSON=$(curl -s -X GET "https://api.render.com/v1/services/$RENDER_SERVICE_ID/env-vars" \
  -H "Authorization: Bearer $RENDER_API_KEY")

# –í—ã–≤–æ–¥–∏–º —Å—ã—Ä–æ–π JSON –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
echo "DEBUG: $RAW_JSON"

# –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å DATABASE_URL. –ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî –µ—Å–ª–∏ JSON —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á "envVars".
DB_INFO=$(echo "$RAW_JSON" | jq -r '.envVars[] | select(.key=="DATABASE_URL") | .value')

# –ï—Å–ª–∏ DB_INFO –≤—Å—ë –µ—â—ë –ø—É—Å—Ç–æ–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, —á—Ç–æ JSON –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–∞–∫ –º–∞—Å—Å–∏–≤
if [ -z "$DB_INFO" ]; then
    DB_INFO=$(echo "$RAW_JSON" | jq -r '.[] | select(.key=="DATABASE_URL") | .value')
fi

echo "DB_INFO: $DB_INFO"

# –ï—Å–ª–∏ DB_INFO –Ω–µ –ø–æ–ª—É—á–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
if [ -z "$DB_INFO" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ Render API."
    exit 1
fi

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞:
# postgres://username:password@host:port/database
DB_HOST=$(echo "$DB_INFO" | awk -F'@' '{print $2}' | cut -d':' -f1)
DB_PORT=$(echo "$DB_INFO" | awk -F':' '{print $4}' | cut -d'/' -f1)
DB_USER=$(echo "$DB_INFO" | awk -F':' '{print $2}' | cut -d'/' -f3)
DB_PASSWORD=$(echo "$DB_INFO" | awk -F':' '{print $3}' | cut -d'@' -f1)
DB_NAME=$(echo "$DB_INFO" | awk -F'/' '{print $4}')

echo "DB_NAME=$DB_NAME DB_HOST=$DB_HOST DB_PORT=$DB_PORT DB_USER=$DB_USER DB_PASSWORD=$DB_PASSWORD"

# –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
echo "üîÑ Creating backup..."
PGPASSWORD=$DB_PASSWORD pg_dump -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -Fc -f $BACKUP_FILE
